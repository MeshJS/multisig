// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String @id @default(cuid())
  address      String @unique
  stakeAddress String @unique
  nostrKey     String @unique
  discordId    String @default("")
}

model Wallet {
  id                  String   @id @default(cuid())
  name                String
  description         String?
  signersAddresses    String[]
  signersStakeKeys    String[]
  signersDescriptions String[]
  numRequiredSigners  Int?
  verified            String[]
  scriptCbor          String
  stakeCredentialHash String?
  type                String
  isArchived          Boolean  @default(false)
  clarityApiKey       String?
}

model Transaction {
  id                String   @id @default(cuid())
  walletId          String
  txJson            String
  txCbor            String
  signedAddresses   String[]
  rejectedAddresses String[]
  description       String?
  state             Int
  txHash            String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model Signable {
  id                String   @id @default(cuid())
  walletId          String
  payload           String
  signatures        String[]
  signedAddresses   String[]
  rejectedAddresses String[]
  description       String?
  method            String?
  state             Int
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  callbackUrl       String?
  remoteOrigin      String?
}

model NewWallet {
  id                  String   @id @default(cuid())
  name                String
  description         String?
  signersAddresses    String[]
  signersStakeKeys    String[]
  signersDescriptions String[]
  numRequiredSigners  Int?
  ownerAddress        String
  stakeCredentialHash String?
  scriptType          String?
}

model Nonce {
  id        String   @id @default(cuid())
  address   String   @unique
  value     String
  createdAt DateTime @default(now())
}

model Ballot {
  id               String   @id @default(cuid())
  walletId         String
  description      String?
  items            String[]
  itemDescriptions String[]
  choices          String[]
  type             Int
  createdAt        DateTime @default(now())
}

model Proxy {
  id           String   @id @default(cuid())
  walletId     String?  // Optional - can be linked to wallet or user
  userId       String?  // Optional - can be linked to user directly
  proxyAddress String
  authTokenId  String
  paramUtxo    String
  description  String?
  isActive     Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}
